openapi: 3.0.1
info:
  title: Beers
  description: 'This is a sample server Beers server.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For
    this sample, you can use the api key `special-key` to test the authorization filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.5
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://localhost:8080/api/v1
- url: https://localhost:8080/api/v1
tags:
- name: beers
  description: Everything about your beers
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: pubs
  description: Everything about your pubs
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: purchases
  description: Everything about purchases.
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: storages
  description: Everything about storages.
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /beers:
    get:
      tags:
      - beers
      summary: Find all beers
      description: Returns beers list
      operationId: getAllBeers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BeerArray'
    post:
      tags:
      - beers
      summary: Save a new beers to the list
      description: this is a description
      operationId: addBeers
      requestBody:
        description: beer object that needs to be added to the list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeerRequest'
        required: true
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
      x-codegen-request-body-name: book
  /beers/{beerID}:
    get:
      tags:
      - beers
      summary: Find a beer by Id
      description: Returns beer list
      operationId: getBeerById
      parameters:
      - name: beerID
        in: path
        description: ID of beer
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
    put:
      tags:
      - beers
      summary: Save or update a beer by Id
      description: Update description
      operationId: updateBeekById
      parameters:
      - name: beerID
        in: path
        description: ID of beer
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated beer object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeerRequest'
        required: true
      responses:
        202:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
      x-codegen-request-body-name: body
    delete:
      tags:
      - beers
      summary: Delete a beer
      description: Delete description
      operationId: deleteBeerById
      parameters:
      - name: beerID
        in: path
        description: ID of beer
        required: true
        schema:
          type: integer
          format: int64
      responses:
        202:
          description: removed element
          content: {}
  /pubs:
    get:
      tags:
      - pubs
      summary: Find all pubs
      description: Returns pub list
      operationId: getAllPubs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/PubArray'
    post:
      tags:
      - pubs
      summary: Save a new pub to the list
      description: this is a description
      operationId: addPubs
      requestBody:
        description: pub object that needs to be added to the list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PubRequest'
        required: true
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
      x-codegen-request-body-name: pub
  /pubs/{pubID}:
    get:
      tags:
      - pubs
      summary: Find a pub by Id
      description: Returns pub
      operationId: getPubById
      parameters:
      - name: pubID
        in: path
        description: ID of pub
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
    put:
      tags:
      - pubs
      summary: Save or update a pub by Id
      description: Update description
      operationId: updatePubsById
      parameters:
      - name: pubID
        in: path
        description: ID of pub
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated pub object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PubRequest'
        required: true
      responses:
        202:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
      x-codegen-request-body-name: body
    delete:
      tags:
      - pubs
      summary: Delete a pub
      description: Delete description
      operationId: deletePubById
      parameters:
      - name: pubID
        in: path
        description: ID of pub
        required: true
        schema:
          type: integer
          format: int64
      responses:
        202:
          description: removed element
          content: {}
  /purchases:
    get:
      tags:
      - purchases
      summary: Find all purchases
      description: Returns purchase list
      operationId: getAllPurchases
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/PurchaseArray'
    post:
      tags:
      - purchases
      summary: Save a new purchase to the list
      description: this is a description
      operationId: addPurchases
      requestBody:
        description: purchase object that needs to be added to the list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
      x-codegen-request-body-name: purchase
  /purchases/{purchaseID}:
    get:
      tags:
      - purchases
      summary: Find a purchase by Id
      description: Returns purchase
      operationId: getPurchaseById
      parameters:
      - name: purchaseID
        in: path
        description: ID of purchase
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
    put:
      tags:
      - purchases
      summary: Save or update a purchase by Id
      description: Update description
      operationId: updatePurchasesById
      parameters:
      - name: purchaseID
        in: path
        description: ID of purchase
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated purchase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        202:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
      x-codegen-request-body-name: body
    delete:
      tags:
      - purchases
      summary: Delete a purchase
      description: Delete description
      operationId: deletePurchaseById
      parameters:
      - name: purchaseID
        in: path
        description: ID of purchase
        required: true
        schema:
          type: integer
          format: int64
      responses:
        202:
          description: removed element
          content: {}
  /storages:
    get:
      tags:
      - storages
      summary: Find all storages
      description: Returns storage list
      operationId: getAllStorages
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/StorageArray'
    post:
      tags:
      - storages
      summary: Save a new storage to the list
      description: this is a description
      operationId: addStorages
      requestBody:
        description: storage object that needs to be added to the list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageRequest'
        required: true
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
      x-codegen-request-body-name: purchase
  /storages/{storageID}:
    get:
      tags:
      - storages
      summary: Find a storage by Id
      description: Returns storage
      operationId: getStorageById
      parameters:
      - name: storageID
        in: path
        description: ID of purchase
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
    put:
      tags:
      - storages
      summary: Save or update a storage by Id
      description: Update description
      operationId: updateStorageById
      parameters:
      - name: storageID
        in: path
        description: ID of storage
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated storage object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageRequest'
        required: true
      responses:
        202:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - storages
      summary: Delete a storage
      description: Delete description
      operationId: deleteStorageById
      parameters:
      - name: storageID
        in: path
        description: ID of storage
        required: true
        schema:
          type: integer
          format: int64
      responses:
        202:
          description: removed element
          content: {}
components:
  schemas:
    BeerRequest:
      type: object
      properties:
        name:
          type: string
          example: "Estrella"
        firstBrewed:
          type: string
          example: "2021"
        description:
          type: string
          example: "Descripcion de cerveza"
        imageUrl:
          type: string
          example: "http://web.com/image.img"
        abv:
          type: number
          format: float
    Beer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "Estrella"
        firstBrewed:
          type: string
          example: "2021"
        description:
          type: string
          example: "Descripcion de cerveza"
        imageUrl:
          type: string
          example: "http://web.com/image.img"
        abv:
          type: number
          format: float
        purchases:
          type: array
          example: [{"id":"1", "purchaseDate":"2021/11/15"}]
    BeerArray:
      type: array
      items:
        $ref: '#/components/schemas/Beer'
    PubRequest:
      type: object
      properties:
        name:
          type: string
          example: "Punto Estrella"
        city:
          type: string
          example: "Lleida"
    Pub:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "Bar Paco"
        city:
          type: string
          example: "Barcelona"
        purchases:
          type: array
          example: [{"id":"1", "purchaseDate":"2021/11/15"}]
    PubArray:
      type: array
      items:
        $ref: '#/components/schemas/Pub'
    PurchaseRequest:
      type: object
      properties:
        purchase_date:
          type: string
          example: "2021-11-16"
        price:
          type: integer
          format: float
        status:
          type: string
          example: "Pending"
        reader_id:
          type: string
          example: "1"
        book_id:
          type: string
          example: "1"
    Purchase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        purchaseDate:
          type: string
          example: "2021-11-16"
        price:
          type: integer
          format: float
        status:
          type: string
          example: "Pending"
        beers:
          type: array
          example: [{"id":"1", "name":"Estrella"}]
        pubs:
          type: array
          example: [{"id":"1", "name":"Bar Paco"}]
    PurchaseArray:
      type: array
      items:
        $ref: '#/components/schemas/Purchase'
    StorageRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "Almacen 1"
        city:
          type: string
          example: "Madrid"
        beer_id:
          type: string
          example: "1"
        cantity:
          type: integer
          format: int64
        pub_id:
          type: string
          example: "1"
    Storage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "Almacen 1"
        city:
          type: string
          example: "Madrid"
        BeerStock:
          type: array
          example: [{{"id":"1", "name":"Estrella"}, "cantity":30}]
        pubs:
          type: array
          example: [{"id":"1", "name":"Bar Paco"}]
    StorageArray:
      type: array
      items:
        $ref: '#/components/schemas/Storage'
    BeerStock:
      type: object
      properties:
        beers:
          type: array
          example: [{"id":"1", "name":"Estrella"}]
        cantity:
          type: integer
          format: int64
    BeerStockArray:
      type: array
      items:
        $ref: '#/components/schemas/BeerStock'